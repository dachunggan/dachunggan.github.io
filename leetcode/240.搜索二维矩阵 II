题目描述与要求：
编写一个高效的算法来搜索 m x n 矩阵 matrix 中的一个目标值 target 。该矩阵具有以下特性：

每行的元素从左到右升序排列。
每列的元素从上到下升序排列。

输入：matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5
输出：true


输入：matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20
输出：false

提示：

m == matrix.length
n == matrix[i].length
1 <= n, m <= 300
-109 <= matrix[i][j] <= 109
每行的所有元素从左到右升序排列
每列的所有元素从上到下升序排列
-109 <= target <= 109

=== 分割线 ===
题解思路与写法：
解1：
暴力遍历：时间复杂度O(m * n),空间负责度O(1)

解2：
二分查找：查找方式，按行遍历，每行用二分查找，判断是否出现target

解3：
二分 + 遍历：缩小查找范围，先用二分找到需要遍历的范围（最大x与最大y），再在该缩小范围的矩阵中进行查找

解4：
Z字查找：缩小查找范围，由于从左到右和从上到下元素递增，所以可以以矩阵右上角为目标点，每次比较所选中矩阵右上角的值，大于则减去矩阵最右列，即y--。小于则减去最上列，即x++，能够保证右上角值始终朝最接近target的方向移动

=== 分割线 ===
总结：解3是自己的解法，作答时考虑要结合利用递增的特性求解，所以通过二分缩小范围。这类含排序关系的查找目标值类型的题目，要考虑利用线性特性，争取每一步都高效求解。因为解3遍历过程明显能够再优化，所以解3不是最优解。
记录z型遍历为递增矩阵的求解思路之一，合理利用递增的特性。
